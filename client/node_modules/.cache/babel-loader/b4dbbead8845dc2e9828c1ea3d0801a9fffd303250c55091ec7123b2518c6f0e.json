{"ast":null,"code":"var _jsxFileName = \"/Users/mahadrehan/Desktop/FloatPOS/float/src/components/DraggableTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableImg = styled.img`\n  width: 60%;\n  height: 60%;\n  pointer-events: none; /* This ensures the image doesn't interfere with dragging */\n`;\n_c = TableImg;\nexport default function DraggableTable({\n  img,\n  gridRef,\n  addElementToGrid\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const draggableRef = useRef(null);\n  const handleDragStop = (e, data) => {\n    const gridRect = gridRef.current.getBoundingClientRect();\n    const draggableRect = draggableRef.current.getBoundingClientRect();\n    console.log(gridRect);\n    console.log(draggableRect.left);\n    console.log(draggableRect.top);\n    if (\n    //   draggableRect.left >= gridRect.left &&\n    //   draggableRect.right <= gridRect.right &&\n    //   draggableRect.top >= gridRect.top &&\n    //   draggableRect.bottom <= gridRect.bottom\n    true) {\n      // Element is within the grid bounds\n      const newX = draggableRect.left - gridRect.left;\n      const newY = draggableRect.top - gridRect.top;\n      addElementToGrid( /*#__PURE__*/_jsxDEV(DraggableTable, {\n        img: img,\n        gridRef: gridRef,\n        addElementToGrid: addElementToGrid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), {\n        x: newX,\n        y: newY\n      });\n    } else {\n      // Element is outside the grid bounds, reset position\n      setPosition({\n        x: 0,\n        y: 0\n      });\n    }\n    setDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-option\",\n    ref: draggableRef,\n    style: {\n      position: \"relative\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      onStart: () => setDragging(true),\n      onStop: handleDragStop,\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `draggable-content ${dragging ? \"dragging\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"draggable-icon\",\n          src: \"/assets/icons/draggable-icon.svg\",\n          alt: \"draggable icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableImg, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n// Add this CSS to your stylesheet or a styled component\n_s(DraggableTable, \"8E+SKpylJYmgHLFc67w4XZrhH/I=\");\n_c2 = DraggableTable;\nconst styles = `\n.table-option {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10vw;\n  min-width: 9rem;\n  min-height: 10rem;\n  border: 1px solid #38C6F450;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.draggable-content.dragging {\n  position: absolute !important;\n  z-index: 1000;\n  transition: none;\n}\n`;\n\n// Inject the styles into the document head\nconst styleSheet = document;\nvar _c, _c2;\n$RefreshReg$(_c, \"TableImg\");\n$RefreshReg$(_c2, \"DraggableTable\");","map":{"version":3,"names":["React","useState","useRef","styled","Draggable","jsxDEV","_jsxDEV","TableImg","img","_c","DraggableTable","gridRef","addElementToGrid","_s","dragging","setDragging","position","setPosition","x","y","draggableRef","handleDragStop","e","data","gridRect","current","getBoundingClientRect","draggableRect","console","log","left","top","newX","newY","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","style","children","onStart","onStop","src","alt","_c2","styles","styleSheet","document","$RefreshReg$"],"sources":["/Users/mahadrehan/Desktop/FloatPOS/float/src/components/DraggableTable.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Draggable from \"react-draggable\";\n\nconst TableImg = styled.img`\n  width: 60%;\n  height: 60%;\n  pointer-events: none; /* This ensures the image doesn't interfere with dragging */\n`;\n\nexport default function DraggableTable({ img, gridRef, addElementToGrid }) {\n  const [dragging, setDragging] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const draggableRef = useRef(null);\n\n  const handleDragStop = (e, data) => {\n    const gridRect = gridRef.current.getBoundingClientRect();\n    const draggableRect = draggableRef.current.getBoundingClientRect();\n\n    console.log(gridRect)\n    console.log(draggableRect.left)\n    console.log(draggableRect.top)\n    if (\n    //   draggableRect.left >= gridRect.left &&\n    //   draggableRect.right <= gridRect.right &&\n    //   draggableRect.top >= gridRect.top &&\n    //   draggableRect.bottom <= gridRect.bottom\n    true\n    ) {\n      // Element is within the grid bounds\n      const newX = draggableRect.left - gridRect.left;\n      const newY = draggableRect.top - gridRect.top;\n      addElementToGrid(\n        <DraggableTable img={img} gridRef={gridRef} addElementToGrid={addElementToGrid} />,\n        { x: newX, y: newY }\n      );\n    } else {\n      // Element is outside the grid bounds, reset position\n      setPosition({ x: 0, y: 0 });\n    }\n\n    setDragging(false);\n  };\n\n  return (\n    <div className=\"table-option\" ref={draggableRef} style={{ position: \"relative\" }}>\n      <Draggable\n        onStart={() => setDragging(true)}\n        onStop={handleDragStop}\n        position={position}\n      >\n        <div className={`draggable-content ${dragging ? \"dragging\" : \"\"}`}>\n          <img className=\"draggable-icon\" src=\"/assets/icons/draggable-icon.svg\" alt=\"draggable icon\" />\n          <TableImg src={img} />\n        </div>\n      </Draggable>\n    </div>\n  );\n}\n\n// Add this CSS to your stylesheet or a styled component\nconst styles = `\n.table-option {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10vw;\n  min-width: 9rem;\n  min-height: 10rem;\n  border: 1px solid #38C6F450;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.draggable-content.dragging {\n  position: absolute !important;\n  z-index: 1000;\n  transition: none;\n}\n`;\n\n// Inject the styles into the document head\nconst styleSheet = document\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}