{"ast":null,"code":"var _jsxFileName = \"/Users/mahadrehan/Desktop/FloatPOS/float/src/components/DraggableTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableImg = styled.img`\n  width: 60%;\n  height: 60%;\n  pointer-events: none; /* This ensures the image doesn't interfere with dragging */\n`;\n_c = TableImg;\nexport default function DraggableTable({\n  img,\n  gridRef,\n  addElementToGrid,\n  initialPosition = {\n    x: 0,\n    y: 0\n  },\n  isInGrid = false,\n  updateElementPosition,\n  onDragStart,\n  onDragStop\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const draggableRef = useRef(null);\n  const handleDragStart = (e, data) => {\n    setDragging(true);\n    if (!isInGrid && onDragStart) {\n      onDragStart();\n    }\n  };\n  const handleDragStop = (e, data) => {\n    const gridRect = gridRef.current.getBoundingClientRect();\n    const draggableRect = draggableRef.current.getBoundingClientRect();\n    if (draggableRect.left >= gridRect.left && draggableRect.right <= gridRect.right && draggableRect.top >= gridRect.top && draggableRect.bottom <= gridRect.bottom) {\n      // Element is within the grid bounds\n      const newX = draggableRect.left - gridRect.left;\n      const newY = draggableRect.top - gridRect.top;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n      if (!isInGrid) {\n        addElementToGrid( /*#__PURE__*/_jsxDEV(DraggableTable, {\n          img: img,\n          gridRef: gridRef,\n          initialPosition: {\n            x: newX,\n            y: newY\n          },\n          isInGrid: true,\n          updateElementPosition: updateElementPosition,\n          onDragStart: onDragStart,\n          onDragStop: onDragStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), {\n          x: newX,\n          y: newY\n        });\n      } else {\n        updateElementPosition({\n          x: newX,\n          y: newY\n        });\n      }\n    } else {\n      // Element is outside the grid bounds, reset position\n      setPosition(initialPosition);\n    }\n    setDragging(false);\n    if (onDragStop) {\n      onDragStop();\n    }\n  };\n  useEffect(() => {\n    setPosition(initialPosition);\n  }, [initialPosition]);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    nodeRef: draggableRef,\n    onStart: handleDragStart,\n    onStop: handleDragStop,\n    position: position,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: draggableRef,\n      className: `draggable-content ${dragging ? \"dragging\" : \"\"}`,\n      style: {\n        position: 'absolute',\n        left: position.x,\n        top: position.y\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"draggable-icon\",\n        src: \"/assets/icons/draggable-icon.svg\",\n        alt: \"draggable icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableImg, {\n        src: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n// Add this CSS to your stylesheet or a styled component\n_s(DraggableTable, \"WgQgTySbFg/USLanC9JNFmZMdRM=\");\n_c2 = DraggableTable;\nconst styles = `\n.draggable-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10vw;\n  min-width: 9rem;\n  min-height: 10rem;\n  border: 1px solid #38C6F450;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.draggable-content.dragging {\n  z-index: 1000;\n  transition: none;\n}\n`;\n\n// Inject the styles into the document head\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.type = \"text/css\";\nstyleSheet.innerText = styles;\ndocument.head.appendChild(styleSheet);\nvar _c, _c2;\n$RefreshReg$(_c, \"TableImg\");\n$RefreshReg$(_c2, \"DraggableTable\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","Draggable","jsxDEV","_jsxDEV","TableImg","img","_c","DraggableTable","gridRef","addElementToGrid","initialPosition","x","y","isInGrid","updateElementPosition","onDragStart","onDragStop","_s","dragging","setDragging","position","setPosition","draggableRef","handleDragStart","e","data","handleDragStop","gridRect","current","getBoundingClientRect","draggableRect","left","right","top","bottom","newX","newY","fileName","_jsxFileName","lineNumber","columnNumber","nodeRef","onStart","onStop","children","ref","className","style","src","alt","_c2","styles","styleSheet","document","createElement","type","innerText","head","appendChild","$RefreshReg$"],"sources":["/Users/mahadrehan/Desktop/FloatPOS/float/src/components/DraggableTable.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Draggable from \"react-draggable\";\n\nconst TableImg = styled.img`\n  width: 60%;\n  height: 60%;\n  pointer-events: none; /* This ensures the image doesn't interfere with dragging */\n`;\n\nexport default function DraggableTable({\n  img,\n  gridRef,\n  addElementToGrid,\n  initialPosition = { x: 0, y: 0 },\n  isInGrid = false,\n  updateElementPosition,\n  onDragStart,\n  onDragStop,\n}) {\n  const [dragging, setDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const draggableRef = useRef(null);\n\n  const handleDragStart = (e, data) => {\n    setDragging(true);\n    if (!isInGrid && onDragStart) {\n      onDragStart();\n    }\n  };\n\n  const handleDragStop = (e, data) => {\n    const gridRect = gridRef.current.getBoundingClientRect();\n    const draggableRect = draggableRef.current.getBoundingClientRect();\n\n    if (\n      draggableRect.left >= gridRect.left &&\n      draggableRect.right <= gridRect.right &&\n      draggableRect.top >= gridRect.top &&\n      draggableRect.bottom <= gridRect.bottom\n    ) {\n      // Element is within the grid bounds\n      const newX = draggableRect.left - gridRect.left;\n      const newY = draggableRect.top - gridRect.top;\n      setPosition({ x: newX, y: newY });\n      if (!isInGrid) {\n        addElementToGrid(\n          <DraggableTable\n            img={img}\n            gridRef={gridRef}\n            initialPosition={{ x: newX, y: newY }}\n            isInGrid={true}\n            updateElementPosition={updateElementPosition}\n            onDragStart={onDragStart}\n            onDragStop={onDragStop}\n          />,\n          { x: newX, y: newY }\n        );\n      } else {\n        updateElementPosition({ x: newX, y: newY });\n      }\n    } else {\n      // Element is outside the grid bounds, reset position\n      setPosition(initialPosition);\n    }\n\n    setDragging(false);\n    if (onDragStop) {\n      onDragStop();\n    }\n  };\n\n  useEffect(() => {\n    setPosition(initialPosition);\n  }, [initialPosition]);\n\n  return (\n    <Draggable\n      nodeRef={draggableRef}\n      onStart={handleDragStart}\n      onStop={handleDragStop}\n      position={position}\n    >\n      <div ref={draggableRef} className={`draggable-content ${dragging ? \"dragging\" : \"\"}`} style={{ position: 'absolute', left: position.x, top: position.y }}>\n        <img className=\"draggable-icon\" src=\"/assets/icons/draggable-icon.svg\" alt=\"draggable icon\" />\n        <TableImg src={img} />\n      </div>\n    </Draggable>\n  );\n}\n\n// Add this CSS to your stylesheet or a styled component\nconst styles = `\n.draggable-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10vw;\n  min-width: 9rem;\n  min-height: 10rem;\n  border: 1px solid #38C6F450;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.draggable-content.dragging {\n  z-index: 1000;\n  transition: none;\n}\n`;\n\n// Inject the styles into the document head\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.type = \"text/css\";\nstyleSheet.innerText = styles;\ndocument.head.appendChild(styleSheet);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}