{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FloatPOS\\\\FloatPOS\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { login } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUserData\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.email && formData.password) {\n      try {\n        const response = await login(formData);\n        localStorage.setItem('token', response.data.token);\n        setUserData(response.data);\n        console.log('User logged in:', response.data.user);\n        navigate('/');\n      } catch (error) {\n        setMessage('Login error');\n        console.error('Login error:', error);\n      }\n    } else {\n      setMessage('Please fill out all fields');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FloatPOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/placeholder-logo.png\",\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"p7c9X4zitKlIujYG7a10zMg/j4o=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","useNavigate","jsxDEV","_jsxDEV","Login","setUserData","_s","formData","setFormData","email","password","message","setMessage","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","localStorage","setItem","data","token","console","log","user","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/FloatPOS/FloatPOS/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { login } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/login.scss';\r\n\r\nconst Login = ({ setUserData }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.email && formData.password) {\r\n      try {\r\n        const response = await login(formData);\r\n        localStorage.setItem('token', response.data.token);\r\n        setUserData(response.data);\r\n        console.log('User logged in:', response.data.user);\r\n\r\n        navigate('/');\r\n      } catch (error) {\r\n        setMessage('Login error');\r\n        console.error('Login error:', error);\r\n      }\r\n    } else {\r\n      setMessage('Please fill out all fields');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>FloatPOS</h1>\r\n      <img src=\"/placeholder-logo.png\" alt=\"Logo\" className=\"logo\"/>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        {message && <p>{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}