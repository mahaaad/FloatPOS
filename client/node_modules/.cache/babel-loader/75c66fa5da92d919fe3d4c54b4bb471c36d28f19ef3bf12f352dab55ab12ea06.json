{"ast":null,"code":"var _jsxFileName = \"/Users/mahadrehan/Desktop/FloatPOS/float/client/src/components/PaymentModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../style/paymentModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = `pk_test_51J6PWwEnEMhMVMfh1Tz0EtUlSwP6vXHWgoS5rD31BB27zg1HN5ivoWBgRf5bSf7uJj5jC0qqVU0BILn4JxrZ9cLP006YNpsZIg`;\nconst stripePromise = loadStripe(key);\nconst PaymentModal = ({\n  isOpen,\n  onRequestClose,\n  total\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentProcessing, setPaymentProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setPaymentProcessing(true);\n    const cardElement = elements.getElement(CardElement);\n    try {\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement\n      });\n      if (error) {\n        setError(error.message);\n        setPaymentProcessing(false);\n        return;\n      }\n      const response = await fetch('/api/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id,\n          amount: total * 100\n        })\n      });\n      const paymentIntent = await response.json();\n      const confirmedPayment = await stripe.confirmCardPayment(paymentIntent.clientSecret);\n      if (confirmedPayment.error) {\n        setError(confirmedPayment.error.message);\n        setPaymentProcessing(false);\n        return;\n      }\n      setSuccess(true);\n      setPaymentProcessing(false);\n    } catch (err) {\n      setError(err.message);\n      setPaymentProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Payment Modal\",\n    className: \"payment-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Complete Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || paymentProcessing,\n        children: paymentProcessing ? 'Processing...' : `Pay $${total.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: \"Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentModal, \"GBLIcUvDtcFzha+GRtLjYNlpTUg=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentModal;\nconst PaymentModalWrapper = ({\n  isOpen,\n  onRequestClose,\n  total\n}) => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(PaymentModal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    total: total\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this);\n_c2 = PaymentModalWrapper;\nexport default PaymentModalWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentModal\");\n$RefreshReg$(_c2, \"PaymentModalWrapper\");","map":{"version":3,"names":["React","useState","Modal","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","key","stripePromise","PaymentModal","isOpen","onRequestClose","total","_s","stripe","elements","paymentProcessing","setPaymentProcessing","error","setError","success","setSuccess","handleSubmit","event","preventDefault","cardElement","getElement","paymentMethod","createPaymentMethod","type","card","message","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","amount","paymentIntent","json","confirmedPayment","confirmCardPayment","clientSecret","err","contentLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","disabled","toFixed","_c","PaymentModalWrapper","_c2","$RefreshReg$"],"sources":["/Users/mahadrehan/Desktop/FloatPOS/float/client/src/components/PaymentModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport '../style/paymentModal.scss';\n\nconst key =`pk_test_51J6PWwEnEMhMVMfh1Tz0EtUlSwP6vXHWgoS5rD31BB27zg1HN5ivoWBgRf5bSf7uJj5jC0qqVU0BILn4JxrZ9cLP006YNpsZIg`\nconst stripePromise = loadStripe(key);\n\nconst PaymentModal = ({ isOpen, onRequestClose, total }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentProcessing, setPaymentProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setPaymentProcessing(true);\n\n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n\n      if (error) {\n        setError(error.message);\n        setPaymentProcessing(false);\n        return;\n      }\n\n      const response = await fetch('/api/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ paymentMethodId: paymentMethod.id, amount: total * 100 }),\n      });\n\n      const paymentIntent = await response.json();\n\n      const confirmedPayment = await stripe.confirmCardPayment(paymentIntent.clientSecret);\n\n      if (confirmedPayment.error) {\n        setError(confirmedPayment.error.message);\n        setPaymentProcessing(false);\n        return;\n      }\n\n      setSuccess(true);\n      setPaymentProcessing(false);\n    } catch (err) {\n      setError(err.message);\n      setPaymentProcessing(false);\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onRequestClose} contentLabel=\"Payment Modal\" className=\"payment-modal\">\n      <h2>Complete Payment</h2>\n      <form onSubmit={handleSubmit}>\n        <CardElement />\n        {error && <div className=\"error\">{error}</div>}\n        <button type=\"submit\" disabled={!stripe || paymentProcessing}>\n          {paymentProcessing ? 'Processing...' : `Pay $${total.toFixed(2)}`}\n        </button>\n      </form>\n      {success && <div className=\"success\">Payment Successful!</div>}\n    </Modal>\n  );\n};\n\nconst PaymentModalWrapper = ({ isOpen, onRequestClose, total }) => (\n  <Elements stripe={stripePromise}>\n    <PaymentModal isOpen={isOpen} onRequestClose={onRequestClose} total={total} />\n  </Elements>\n);\n\nexport default PaymentModalWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}